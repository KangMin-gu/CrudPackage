<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cp">
	
	<select id="list" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM (
			SELECT A.CAMPNO
				, A.CAMPNAME
				, A.CAMPTYPE
				, CASE WHEN A.CAMPTYPE = 10 THEN '세미나'
			  		  WHEN A.CAMPTYPE = 20 THEN '뉴스레터'
			  		  WHEN A.CAMPTYPE = 30 THEN '테스트' END AS CAMPTYPE_
				, A.CAMPSTEP
				, CASE WHEN A.CAMPSTEP = 0 THEN '생성'
			  		  WHEN A.CAMPSTEP = 1 THEN '추출'
			  		  WHEN A.CAMPSTEP = 2 THEN '발송'
			  		  WHEN A.CAMPSTEP = 3 THEN '종료' END AS CAMPSTEP_
			  	, A.STARTDATE,ENDDATE
				, (SELECT USERNAME FROM Crud_SaaS.dbo.TB980010 WHERE USERNO = A.OWNER) AS OWNER_
				, A.CAMPDESC 
				, CONVERT(nvarchar,A.STARTDATE,23) + '-' + CONVERT(nvarchar,A.ENDDATE,23) AS CAMPDATE_
				,ROW_NUMBER() OVER(ORDER BY A.CAMPNO DESC) AS ROWNUM
			FROM Crud_SaaS.dbo.T_CAMPAIGN A
			WHERE SITEID = #{siteid}
			AND ISDELETE = 0
			) X 
		WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
	</select>
		<select id="detail" parameterType="campaignDto" resultType="hashMap">
		SELECT 
		A.CAMPNO
		,A.CAMPNAME
		,A.CAMPTYPE
		,CASE WHEN A.CAMPTYPE = 10 THEN '세미나'
			  WHEN A.CAMPTYPE = 20 THEN '뉴스레터'
			  WHEN A.CAMPTYPE = 30 THEN '테스트' END AS CAMPTYPE_
		,A.CAMPSTEP
		,CASE WHEN A.CAMPSTEP = 0 THEN '생성'
			  WHEN A.CAMPSTEP = 1 THEN '추출'
			  WHEN A.CAMPSTEP = 2 THEN '발송'
			  WHEN A.CAMPSTEP = 3 THEN '종료' END AS CAMPSTEP_
		, CONVERT(nvarchar,A.STARTDATE,23) AS STARTDATE
		, CONVERT(nvarchar,A.ENDDATE,23) AS ENDDATE
		, CONVERT(nvarchar,A.STARTDATE,23) + '~' + CONVERT(nvarchar,A.ENDDATE,23) AS CAMPDATE_
		,A.OWNER
		,(SELECT USERNAME FROM Crud_SaaS.dbo.TB980010 WHERE USERNO = A.OWNER) AS OWNER_
		,A.CAMPDESC
			FROM Crud_SaaS.dbo.T_CAMPAIGN A
			WHERE A.SITEID = #{siteid}
			AND A.CAMPNO = #{campno}
			
	</select>
	
	<select id="totalRows" parameterType="hashMap" resultType="int">
	SELECT count(*)
			FROM Crud_SaaS.dbo.T_CAMPAIGN
			WHERE SITEID = #{siteid}
			AND ISDELETE = 0
	</select>
	<select id="idcheck" parameterType="String" resultType="int">
		SELECT count(*)
			FROM Crud_SaaS.dbo.TB980010
			WHERE USERID = #{userid}
			
	</select>
	
	<insert id="insert" parameterType="campaignDto">
		<selectKey keyProperty="campno"  resultType="integer" order="AFTER">
		
			INSERT INTO Crud_SaaS.dbo.T_CAMPAIGN
			(
				CAMPNAME
				,CAMPTYPE
				,CAMPSTEP
				,STARTDATE
				,ENDDATE
				,OWNER
				,CAMPDESC
				,SITEID
				,ISDELETE
				,REGDATE
				,REGUSER
				,EDTDATE
				,EDTUSER
			)VALUES(
			#{campname}
			,#{camptype}
			,#{campstep}
			,#{startdate}
			,#{enddate}
			,#{owner}
			,#{campdesc}
			,#{siteid}
			,0
			,getDate()
			,#{reguser}
			,getDate()
			,#{edtuser}
			)
			SELECT SCOPE_IDENTITY()
		</selectKey>
	</insert>
		
	<update id="update" parameterType="userDto">
		UPDATE Crud_SaaS.dbo.T_CAMPAIGN
			SET 
				CAMPNAME = #{campname}
				,CAMPTYPE = #{camptype}
				,STARTDATE = #{startdate}
				,ENDDATE = #{enddate}
				,OWNER = #{owner}
				,CAMPDESC = #{campdesc}
				,EDTDATE = getDate()
				,EDTUSER = #{edtuser}
			WHERE SITEID = #{siteid}
			AND CAMPNO = #{campno}
	</update>
	
	<update id="delete" parameterType="userDto">
		UPDATE Crud_SaaS.dbo.T_CAMPAIGN
			SET
				ISDELETE = '1'
			WHERE CAMPNO = #{campno}
	</update>
	
	<select id="topList" parameterType="int" resultType="hashMap">
		SELECT TOP 5
		A.USERNO
		,A.USERNAME
		,A.USERID
		,A.EMAIL
		,A.USERDUTY
		,CASE WHEN A.ISDELETE = 0 THEN '사용'
			  WHEN A.ISDELETE = 1 THEN '미사용' END AS ISDELETE_
		,CONVERT(nvarchar,A.REGDATE,23) AS REGDATE
		,A.EMAIL
		,A.MOBILE1
		,A.MOBILE2
		,A.MOBILE3
			FROM Crud_SaaS.dbo.TB980010 A
			WHERE A.ISDELETE = 0
			AND A.SITEID = #{siteid}
	</select>
	
	<select id="menuList" parameterType="int" resultType="hashMap">
		SELECT X.MENUNO,X.MENUNAME
		,CASE WHEN X.CNT >= X.BUYCNT THEN 0 ELSE 1 END AS TOTAL
		,X.CNT,X.BUYCNT 
		FROM (SELECT B.MENUNO, B.MENUNAME, ISNULL(C.CNT, 0) AS CNT, A.BUYCNT
				FROM T_SITE_LICENSE A
				INNER JOIN T_MENU B ON B.LICENSENO = A.LICENSENO
				LEFT OUTER JOIN (SELECT SITEID, COUNT(MENUNO) AS CNT, MENUNO
									FROM T_USER_MENU
								GROUP BY MENUNO, SITEID, MENUNO) C ON C.MENUNO = B.MENUNO
				WHERE A.SITEID = #{siteid}) X
		WHERE CASE WHEN X.CNT <![CDATA[>]]>= X.BUYCNT THEN 0
				ELSE 1 END  != 0
	</select>
	
	<update id="menuDelete" parameterType="userMenuDto">
	
		UPDATE Crud_SaaS.dbo.T_USER_MENU
			SET ISDELETE = 1
			WHERE USERNO = #{userno}
			AND SITEID = #{siteid}
	</update>
	
	<insert id="menuMerge" parameterType="userMenuDto">
		
		MERGE INTO Crud_SaaS.dbo.T_USER_MENU AS A
			USING (select '1' AS DUAL ) B ON (A.USERNO = #{userno} AND A.MENUNO = #{menuno})
		WHEN MATCHED THEN
			UPDATE SET A.ISDELETE = 0
		WHEN NOT MATCHED THEN
			INSERT (SITEID,USERNO,MENUNO,REGDATE,REGUSER,EDTDATE,EDTUSER,ISDELETE)
			VALUES(#{siteid},#{userno},#{menuno},getDate(),#{reguser},getDate(),#{edtuser},0);
	</insert>
	
	<select id="userMenu" parameterType="userMenuDto" resultType="hashMap">
		SELECT MENUNO FROM Crud_SaaS.dbo.T_USER_MENU
		WHERE SITEID = #{siteid}
		AND USERNO = #{userno}
	</select>
	
</mapper>