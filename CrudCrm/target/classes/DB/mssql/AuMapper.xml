<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="au">
	
	<select id="list" parameterType="hashMap" resultType="hashMap">
		SELECT * FROM (
			SELECT A.USERNO,A.USERNAME,A.USERID
		,A.EMAIL,A.USERDUTY
		,CASE WHEN A.ISDELETE = 0 THEN '사용'
			  WHEN A.ISDELETE = 1 THEN '미사용' END AS ISDELETE_
		,CONVERT(nvarchar,A.REGDATE,23) AS REGDATE
		,A.MOBILE1,A.MOBILE2,A.MOBILE3
		, A.MOBILE1 + A.MOBILE2 + A.MOBILE3 AS MOBILE
		,ROW_NUMBER() OVER(ORDER BY A.USERNO DESC) AS ROWNUM
			FROM Crud_SaaS.dbo.TB980010 A
			WHERE SITEID = #{siteid}
			AND ISDELETE = 0
			<if test="username != null">
				AND USERNAME LIKE '%'+#{username}+'%'
			</if>
			<if test="mobile != null">
				AND MOBILE LIKE '%'+#{mobile}+'%'
			</if>
			<if test="userid != null">
				AND USERID LIKE '%'+#{userid}+'%'
			</if>
			<if test="isdelete != null">
				AND ISDELETE = #{isdelete}
			</if>
			<if test="strdate != null">
				AND REGDATE <![CDATA[>]]>=#{strdate}
			</if>
			<if test="enddate != null">
				AND REGDATE <![CDATA[<]]>=#{enddate}
			</if>
			) X 
		WHERE X.ROWNUM Between #{startRowNum} and #{endRowNum}
	</select>
		<select id="detail" parameterType="userDto" resultType="hashMap">
		SELECT 
		A.USERNO
		,A.USERNAME
		,A.USERID
		,A.EMAIL
		,A.USERDUTY
		,CHKROLE
		,CASE WHEN A.ISDELETE = 0 THEN '사용'
			  WHEN A.ISDELETE = 1 THEN '미사용' END AS ISDELETE_
		,ISDELETE
		,CASE WHEN A.CHKAUTH = 10 THEN '일반사용자'
			  WHEN A.CHKAUTH = 20 THEN '관리자사용자' END AS CHKAUTH_
		,CHKAUTH
		,CONVERT(nvarchar,A.ENTERDATE,23) AS ENTERDATE
		,A.MOBILE1
		,A.MOBILE2
		,A.MOBILE3
		, A.MOBILE1 + '-' + A.MOBILE2 + '-' + A.MOBILE3 AS MOBILE
		,A.TELNO1
		,A.TELNO2
		,A.TELNO3
		,A.USERDESC
			FROM Crud_SaaS.dbo.TB980010 A
			WHERE SITEID = #{siteid}
			AND USERNO = #{userno}
			
	</select>
	
	<select id="totalRows" parameterType="hashMap" resultType="int">
	SELECT count(*)
			FROM Crud_SaaS.dbo.TB980010
			WHERE SITEID = #{siteid}
			AND ISDELETE = 0
			<if test="username != null">
				AND USERNAME LIKE '%'+#{username}+'%'
			</if>
			<if test="mobile != null">
				AND MOBILE LIKE '%'+#{mobile}+'%'
			</if>
			<if test="userid != null">
				AND USERID LIKE '%'+#{userid}+'%'
			</if>
			<if test="isdelete != null">
				AND ISDELETE = #{isdelete}
			</if>
			<if test="strdate != null">
				AND REGDATE <![CDATA[>]]>=#{strdate}
			</if>
			<if test="enddate != null">
				AND REGDATE <![CDATA[<]]>=#{enddate}
			</if>
	</select>
	<select id="idcheck" parameterType="String" resultType="int">
		SELECT count(*)
			FROM Crud_SaaS.dbo.TB980010
			WHERE USERID = #{userid}
			
	</select>
	
	<insert id="insert" parameterType="userDto">
		<selectKey keyProperty="userno"  resultType="integer" order="AFTER">
		
			INSERT INTO Crud_SaaS.dbo.TB980010
			(
				SITEID
				,USERNAME
				,USERID
				,USERPASSWORD
				,USERDESC
				,EMAIL
				,ENTERDATE
				,USERDUTY
				,MOBILE1
				,MOBILE2
				,MOBILE3
				,TELNO1
				,TELNO2
				,TELNO3
				,CHKAUTH
				,ISDELETE
				,REGDATE
				,REGUSER
				,EDTDATE
				,EDTUSER
			)VALUES(
			#{siteid}
			,#{username}
			,#{userid}
			,#{userpassword}
			,#{userdesc}
			,#{email}
			,#{enterdate}
			,#{userduty}
			,#{mobile1}
			,#{mobile2}
			,#{mobile3}
			,#{telno1}
			,#{telno2}
			,#{telno3}
			,#{chkauth}
			,0
			,getDate()
			,#{reguser}
			,getDate()
			,#{edtuser}
			)
			SELECT SCOPE_IDENTITY()
		</selectKey>
	</insert>
		
	<update id="update" parameterType="userDto">
		UPDATE Crud_SaaS.dbo.TB980010
			SET 
				USERPASSWORD = #{userpassword}
				,USERDESC = #{userdesc}
				,EMAIL = #{email}
				,ENTERDATE = #{enterdate}
				,USERDUTY = #{userduty}
				,MOBILE1 = #{mobile1}
				,MOBILE2 = #{mobile2}
				,MOBILE3 = #{mobile3}
				,TELNO1 = #{telno1}
				,TELNO2 = #{telno2}
				,TELNO3 = #{telno3}
				,CHKAUTH = #{chkauth}
				,EDTDATE = getDate()
				,EDTUSER = #{edtuser}
			WHERE USERNO = #{userno}
	</update>
	
	<update id="delete" parameterType="userDto">
		UPDATE Crud_SaaS.dbo.TB980010
			SET
				ISDELETE = '1'
			WHERE USERNO = #{userno}
	</update>
	
	<select id="topList" parameterType="int" resultType="hashMap">
		SELECT TOP 5
		A.USERNO
		,A.USERNAME
		,A.USERID
		,A.EMAIL
		,A.USERDUTY
		,CASE WHEN A.ISDELETE = 0 THEN '사용'
			  WHEN A.ISDELETE = 1 THEN '미사용' END AS ISDELETE_
		,CONVERT(nvarchar,A.REGDATE,23) AS REGDATE
		,A.EMAIL
		,A.MOBILE1
		,A.MOBILE2
		,A.MOBILE3
			FROM Crud_SaaS.dbo.TB980010 A
			WHERE A.ISDELETE = 0
			AND A.SITEID = #{siteid}
	</select>
	
	<select id="menuList" parameterType="int" resultType="hashMap">
		SELECT X.MENUNO,X.MENUNAME
		,CASE WHEN X.CNT >= X.BUYCNT THEN 0 ELSE 1 END AS TOTAL
		,X.CNT,X.BUYCNT 
		FROM (SELECT B.MENUNO, B.MENUNAME, ISNULL(C.CNT, 0) AS CNT, A.BUYCNT
				FROM T_SITE_LICENSE A
				INNER JOIN T_MENU B ON B.LICENSENO = A.LICENSENO
				LEFT OUTER JOIN (SELECT SITEID, COUNT(MENUNO) AS CNT, MENUNO
									FROM T_USER_MENU
								GROUP BY MENUNO, SITEID, MENUNO) C ON C.MENUNO = B.MENUNO
				WHERE A.SITEID = #{siteid}) X
		WHERE CASE WHEN X.CNT <![CDATA[>]]>= X.BUYCNT THEN 0
				ELSE 1 END  != 0
	</select>
	
	<update id="menuDelete" parameterType="userMenuDto">
	
		UPDATE Crud_SaaS.dbo.T_USER_MENU
			SET ISDELETE = 1
			WHERE USERNO = #{userno}
			AND SITEID = #{siteid}
	</update>
	
	<insert id="menuMerge" parameterType="userMenuDto">
		
		MERGE INTO Crud_SaaS.dbo.T_USER_MENU AS A
			USING (select '1' AS DUAL ) B ON (A.USERNO = #{userno} AND A.MENUNO = #{menuno})
		WHEN MATCHED THEN
			UPDATE SET A.ISDELETE = 0
		WHEN NOT MATCHED THEN
			INSERT (SITEID,USERNO,MENUNO,REGDATE,REGUSER,EDTDATE,EDTUSER,ISDELETE)
			VALUES(#{siteid},#{userno},#{menuno},getDate(),#{reguser},getDate(),#{edtuser},0);
	</insert>
	
	<select id="userMenu" parameterType="userMenuDto" resultType="hashMap">
		SELECT MENUNO FROM Crud_SaaS.dbo.T_USER_MENU
		WHERE SITEID = #{siteid}
		AND USERNO = #{userno}
	</select>
	
</mapper>